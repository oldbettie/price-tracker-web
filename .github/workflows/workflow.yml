name: Deploy price mates to s3

on:
  push:
    branches: [ main ]

#    FOR DEBUGGING UNCOMMENT THE PULL REQUEST LINES SO YOU CAN TEST IN A PR RATHER THEN MERGE
  pull_request:
    branches: [add-cache-invalidations]


jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # adds all the env files to the build
      - run: touch .env.local
      - run: sleep 5
      - run: echo NEXT_PUBLIC_EMAIL_URL=${{ secrets.NEXT_PUBLIC_EMAIL_URL }} >> .env.local

      - run: npm ci
      - run: npm run lint
      - run: npm run build

      # outputs the build for the next step to use
      - uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: out

  push-to-s3:
    needs: lint-and-build
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      # gets the /out folder from the previous step
      - uses: actions/download-artifact@v2
        with:
          name: build-output
          path: out

      # pushes to s3 on main executions
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - run: aws s3 sync ./out s3://price-mates-landing-page --delete --exclude '.git/*

  invalidate-cloudfront-cache:
    - name: check dist
      needs: [lint-and-build, push-to-s3]
      uses: actions/checkout@master
      with:
        ref: dist
        # need at least 2 here so we can get a proper log in next step
        fetch-depth: 2

    - name: get updated files
      run: |
        # allow grep to fail
        set +e
        FILES=$(git log --stat="1000" -1 | grep '|' | awk '{print "/"$1}' | grep -e '\.html$')
        set -e
        [ -z "$FILES" ] && touch .updated_files && exit 0
        for file in $FILES; do
          echo $file
          # add bare directory to list of updated paths when we see index.html
          [[ "$file" == *"/index.html" ]] && echo $file | sed -e 's/\/index.html$/\//'
        done | sort | uniq | tr '\n' ' ' > .updated_files

    - name: invalidate
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        PATHS_FROM: .updated_files
        AWS_REGION: 'us-east-1'
        DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
